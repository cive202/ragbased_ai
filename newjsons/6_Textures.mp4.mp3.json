{
    "chunks": [
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 0.0,
            "end": 28.16,
            "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures.  Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,  we'll only look at the two-dimensional textures as their the most common type of texture.  So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display.  In order to do that, we're going to use this popular open-source library called STB."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 28.32,
            "end": 54.400000000000006,
            "text": " To install it, go to your project folder, then libraries, and then include.  Now create a folder named STB, and inside of it create the text file named STB underscore image.text.  Now go to the link I left in the description, press Ctrl-A to select everything,  and then copy-based it into the text file we've just created.  Make sure to save it, and then rename it to STB underscore image.h."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 54.4,
            "end": 70.8,
            "text": " Now create a CPP file named STB.cpp in your project source files,  and write the following into it so that we'll only use the things we need from this library.  Now right-click the CPP file and click on compile.  Make sure to only do this once.  That's it."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 70.8,
            "end": 91.60000000000001,
            "text": " Now if you want to use the library, simply include the header file into the file you want to use it in.  I'll do that in the main.cpp file.  Now before we get to the texture, let's make sure we have the coordinates for a square  so that we can better see our texture when displayed.  Don't forget to also change your indices and the GeoLadra elements function."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 92.24000000000001,
            "end": 115.44,
            "text": " Run your program to make sure you do indeed get a square.  If everything is all right, then let's import our image in.  Keep in mind that square textures in powers of two,  such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,  are better optimized than textures with the random number of pixels,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 115.44,
            "end": 137.92000000000002,
            "text": " so do try to make them fit this format.  I'll be using this image of popcat.  That's 512 by 512 pixels, which I'll put into a textures folder in resource files.  Don't forget to also put an image in your project's main folder.  First, we have to create three integer variables to sort the width and height of the image in pixels,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 137.92,
            "end": 156.23999999999998,
            "text": " and the number of color channels it has.  Then we'll store the image itself in an un-styled character array named white,  using the function STBI underscore load,  and giving it the location and name of the image,  the pointers of the variables we created, and zero."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 156.23999999999998,
            "end": 169.36,
            "text": " That's it for importing it in.  Easy, right?  Now let's create the texture object itself.  Just like any openGill object,  we'll first create a reference variable of type GLUINT and name it texture."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 170.08,
            "end": 188.0,
            "text": " Now just use GLGenTextures to generate the texture object,  giving it the number of textures you want, one in our case,  and the pointer to the reference variable.  Since we've created it, we also want to delete it at the end of the main function.  We now need to assign the texture to a texture unit."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 188.0,
            "end": 208.48000000000002,
            "text": " You can think of texture units as slots for textures that come together as a bundle.  This generally holds about 16 textures,  and allow the fragment shader to work with all 16 textures at the same time.  To insert our texture in the slot of the texture unit,  we simply need to activate the texture unit."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 208.48000000000002,
            "end": 223.28,
            "text": " We want using GLActivateTexture,  plugging in the index of the texture unit,  and then binding our texture with GLBindTexture, inserting the texture type,  and its reference value.  Since we now have our texture binded,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 223.28,
            "end": 243.44,
            "text": " that means that this would be a good time to adjust its settings to our liking.  First, we'll have to choose how we want our image to be processed when scaled up or down.  We can choose GL nearest, which keeps all the pixels as they are.  This is preferred when working with pixel art,  or we can choose GL linear,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 243.44,
            "end": 262.32,
            "text": " which creates new pixels according to the pixels nearby.  This generally results in a blurrier image,  which one you choose depends on your needs in a certain context.  For now, I'll just go with GL nearest.  I'll use the GL text parameter i function to tweak our texture settings,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 262.32,
            "end": 276.8,
            "text": " and input the type of our texture,  the setting we want to modify,  and the value we want to give our setting.  I'll modify both the mean filter and mag filter settings.  Now, the second setting is how we want our texture to be repeated."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 277.52,
            "end": 291.59999999999997,
            "text": " We can choose between GL repeat,  GL mirrored repeat, GL clamped to edge, and GL clamped to border.  The first one simply repeats the image.  The second one repeats the image,  but mirrors it every time it repeats it."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 292.32,
            "end": 308.24,
            "text": " The third one stretches the borders of the image,  and the last one simply puts a flat color of your choice outside the image.  Note that you can mix and match them,  since they only apply on one axis.  So you could have the texture repeat on the vertical axis,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 308.24,
            "end": 324.96000000000004,
            "text": " but only have a flat color on the horizontal axis.  These axes are named STR,  corresponding to the common XY and Z axes.  Just like before, we'll use GL text parameter i,  plugging in the texture type,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 324.96000000000004,
            "end": 338.88,
            "text": " the setting we want to modify,  and the value of our setting.  Make sure to do this for both the S and T axes.  If you want to use GL clamped to border,  you'll have to also use GL text parameter fv."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 339.52,
            "end": 350.88,
            "text": " Plug in the texture type,  GL texture border color,  and the color of the border,  which would be an array of three or four floats.  Note that our settings are complete."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 350.88,
            "end": 362.08,
            "text": " We can generate the texture using GL text image 2D,  and inputting the following.  The type of texture,  zero,  the type of color channels we want the texture to have,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 362.56,
            "end": 373.59999999999997,
            "text": " the width, the height,  zero, this is just the legacy leftover thing,  the type of color channels or image has,  the data type of our pixels,  and the image data itself."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 374.15999999999997,
            "end": 387.59999999999997,
            "text": " The most common types of color channels are GL RGB and GL RGBA.  The first one is for JPEGs,  and the second one is for P and Zs.  If you want to look at all the types of color channels  and pixel data types,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 387.59999999999997,
            "end": 403.28000000000003,
            "text": " I left a link in the description to the OpenGL documentation.  If at the end of this tutorial,  you get an error during compiling,  then it might be because you specify the wrong type of color channels,  or pixel data type for reading your image."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 403.28000000000003,
            "end": 422.48,
            "text": " Since we've already imported the image data into the texture,  we'll want to delete the data using STBI image free,  and also unbind the texture so we don't accidentally do something to it.  The last thing you'll want to do after that is to use the GL GenerateMimpup function,  plugging in the data type of the texture."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 422.48,
            "end": 438.56,
            "text": " This will generate the Mimpup for the texture,  which are just smaller resolution versions of the same texture  that are used when the texture is far away, for example.  Great, we have the texture,  but we did not specify how we want the texture to be mapped on the vertices."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 438.56,
            "end": 456.08,
            "text": " So listed at now by adding coordinates to our vertices.  The coordinates of the texture go from 1 to 0 on both axes,  starting from the bottom left corner.  If you would give coordinates higher than 1,  then the texture will be repeated such as in this example."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 456.79999999999995,
            "end": 471.76,
            "text": " Know that we've modified our vertices?  We also need to add a new layout over vertex shader,  and make sure to modify our vertex buffer object.  Since the fragment shader deals with colors,  we need to export the texture coordinates to the fragment shader,"
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 471.76,
            "end": 488.32,
            "text": " and import them like so.  The last thing we need to do in the fragment shader  is to create a uniform of type sampler 2D,  call it text0, then equal the frag color to the function texture,  which takes text0 and takes coordinates as inputs."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 488.32,
            "end": 505.36,
            "text": " The uniform tells openGil which texture unit it should use.  So in the main function, create a uniform just like in the shader's tutorial,  and assign the uniform the index of our slot,  zero in this case.  Make sure to do this after you've activated the shader program."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 506.16,
            "end": 518.96,
            "text": " The last thing we need to do is to bind the texture object in the main function,  and we're done.  If you press run,  you should see a majestic texture appear on your square.  But wait, it's upside down."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 519.52,
            "end": 540.4,
            "text": " Well, that's because OpenGL reads images from the bottom left corner  to the top right corner, while STB reads them from the top left corner  to the bottom right corner.  So all we have to do to fix this is to write STBI set flip vertically on load true  before we load in the image file."
        },
        {
            "number": [
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 0.0,
                    "end": 4.64,
                    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 4.64,
                    "end": 10.96,
                    "text": " Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 10.96,
                    "end": 15.6,
                    "text": " we'll only look at the two-dimensional textures as their the most common type of texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 15.6,
                    "end": 22.400000000000002,
                    "text": " So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 22.400000000000002,
                    "end": 28.16,
                    "text": " In order to do that, we're going to use this popular open-source library called STB."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 28.32,
                    "end": 33.2,
                    "text": " To install it, go to your project folder, then libraries, and then include."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 33.2,
                    "end": 40.8,
                    "text": " Now create a folder named STB, and inside of it create the text file named STB underscore image.text."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 40.8,
                    "end": 45.6,
                    "text": " Now go to the link I left in the description, press Ctrl-A to select everything,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 45.6,
                    "end": 48.96,
                    "text": " and then copy-based it into the text file we've just created."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 48.96,
                    "end": 54.400000000000006,
                    "text": " Make sure to save it, and then rename it to STB underscore image.h."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 54.4,
                    "end": 59.36,
                    "text": " Now create a CPP file named STB.cpp in your project source files,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 59.36,
                    "end": 64.32,
                    "text": " and write the following into it so that we'll only use the things we need from this library."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 64.32,
                    "end": 67.6,
                    "text": " Now right-click the CPP file and click on compile."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 67.6,
                    "end": 69.36,
                    "text": " Make sure to only do this once."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.0,
                    "end": 70.8,
                    "text": " That's it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 70.8,
                    "end": 76.32,
                    "text": " Now if you want to use the library, simply include the header file into the file you want to use it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 76.32,
                    "end": 78.4,
                    "text": " I'll do that in the main.cpp file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 79.12,
                    "end": 83.75999999999999,
                    "text": " Now before we get to the texture, let's make sure we have the coordinates for a square"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 83.76,
                    "end": 86.96000000000001,
                    "text": " so that we can better see our texture when displayed."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 86.96000000000001,
                    "end": 91.60000000000001,
                    "text": " Don't forget to also change your indices and the GeoLadra elements function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 92.24000000000001,
                    "end": 95.28,
                    "text": " Run your program to make sure you do indeed get a square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 95.92,
                    "end": 99.68,
                    "text": " If everything is all right, then let's import our image in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 99.68,
                    "end": 104.08000000000001,
                    "text": " Keep in mind that square textures in powers of two,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 104.08000000000001,
                    "end": 110.64,
                    "text": " such as a 1024 by a 1024 pixels or 2048 by 2048 pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 110.64,
                    "end": 115.44,
                    "text": " are better optimized than textures with the random number of pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 115.44,
                    "end": 118.32,
                    "text": " so do try to make them fit this format."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 118.32,
                    "end": 120.48,
                    "text": " I'll be using this image of popcat."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 120.48,
                    "end": 128.16,
                    "text": " That's 512 by 512 pixels, which I'll put into a textures folder in resource files."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 128.16,
                    "end": 131.76,
                    "text": " Don't forget to also put an image in your project's main folder."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 131.76,
                    "end": 137.92000000000002,
                    "text": " First, we have to create three integer variables to sort the width and height of the image in pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 137.92,
                    "end": 140.39999999999998,
                    "text": " and the number of color channels it has."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 141.11999999999998,
                    "end": 146.23999999999998,
                    "text": " Then we'll store the image itself in an un-styled character array named white,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 146.23999999999998,
                    "end": 149.44,
                    "text": " using the function STBI underscore load,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 149.44,
                    "end": 152.72,
                    "text": " and giving it the location and name of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 152.72,
                    "end": 156.23999999999998,
                    "text": " the pointers of the variables we created, and zero."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 156.23999999999998,
                    "end": 158.56,
                    "text": " That's it for importing it in."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 158.56,
                    "end": 159.76,
                    "text": " Easy, right?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 159.76,
                    "end": 162.56,
                    "text": " Now let's create the texture object itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 162.56,
                    "end": 164.39999999999998,
                    "text": " Just like any openGill object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 164.4,
                    "end": 169.36,
                    "text": " we'll first create a reference variable of type GLUINT and name it texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 170.08,
                    "end": 173.92000000000002,
                    "text": " Now just use GLGenTextures to generate the texture object,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 173.92000000000002,
                    "end": 177.68,
                    "text": " giving it the number of textures you want, one in our case,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 177.68,
                    "end": 180.08,
                    "text": " and the pointer to the reference variable."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 180.08,
                    "end": 183.92000000000002,
                    "text": " Since we've created it, we also want to delete it at the end of the main function."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 184.56,
                    "end": 188.0,
                    "text": " We now need to assign the texture to a texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 188.0,
                    "end": 194.16,
                    "text": " You can think of texture units as slots for textures that come together as a bundle."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 194.72,
                    "end": 197.68,
                    "text": " This generally holds about 16 textures,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 197.68,
                    "end": 202.32,
                    "text": " and allow the fragment shader to work with all 16 textures at the same time."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 202.32,
                    "end": 206.0,
                    "text": " To insert our texture in the slot of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 206.0,
                    "end": 208.48000000000002,
                    "text": " we simply need to activate the texture unit."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 208.48000000000002,
                    "end": 211.20000000000002,
                    "text": " We want using GLActivateTexture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 211.20000000000002,
                    "end": 213.84,
                    "text": " plugging in the index of the texture unit,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 213.84,
                    "end": 218.8,
                    "text": " and then binding our texture with GLBindTexture, inserting the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 218.8,
                    "end": 220.24,
                    "text": " and its reference value."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 220.96,
                    "end": 223.28,
                    "text": " Since we now have our texture binded,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 223.28,
                    "end": 227.76000000000002,
                    "text": " that means that this would be a good time to adjust its settings to our liking."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 228.64000000000001,
                    "end": 233.92000000000002,
                    "text": " First, we'll have to choose how we want our image to be processed when scaled up or down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 233.92000000000002,
                    "end": 238.16000000000003,
                    "text": " We can choose GL nearest, which keeps all the pixels as they are."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 238.16000000000003,
                    "end": 241.12,
                    "text": " This is preferred when working with pixel art,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 241.12,
                    "end": 243.44,
                    "text": " or we can choose GL linear,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 243.44,
                    "end": 247.20000000000002,
                    "text": " which creates new pixels according to the pixels nearby."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 247.28,
                    "end": 250.56,
                    "text": " This generally results in a blurrier image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 250.56,
                    "end": 254.64,
                    "text": " which one you choose depends on your needs in a certain context."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 254.64,
                    "end": 256.64,
                    "text": " For now, I'll just go with GL nearest."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 257.36,
                    "end": 262.32,
                    "text": " I'll use the GL text parameter i function to tweak our texture settings,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 262.32,
                    "end": 264.56,
                    "text": " and input the type of our texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 264.56,
                    "end": 266.4,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 266.4,
                    "end": 268.48,
                    "text": " and the value we want to give our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 268.96,
                    "end": 273.03999999999996,
                    "text": " I'll modify both the mean filter and mag filter settings."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 273.03999999999996,
                    "end": 276.8,
                    "text": " Now, the second setting is how we want our texture to be repeated."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 277.52,
                    "end": 279.52,
                    "text": " We can choose between GL repeat,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 279.52,
                    "end": 284.15999999999997,
                    "text": " GL mirrored repeat, GL clamped to edge, and GL clamped to border."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 284.8,
                    "end": 286.8,
                    "text": " The first one simply repeats the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 287.36,
                    "end": 289.36,
                    "text": " The second one repeats the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 289.36,
                    "end": 291.59999999999997,
                    "text": " but mirrors it every time it repeats it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 292.32,
                    "end": 295.2,
                    "text": " The third one stretches the borders of the image,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 295.2,
                    "end": 299.36,
                    "text": " and the last one simply puts a flat color of your choice outside the image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 300.0,
                    "end": 302.15999999999997,
                    "text": " Note that you can mix and match them,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 302.15999999999997,
                    "end": 304.24,
                    "text": " since they only apply on one axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 304.72,
                    "end": 308.24,
                    "text": " So you could have the texture repeat on the vertical axis,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 308.24,
                    "end": 311.52,
                    "text": " but only have a flat color on the horizontal axis."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 312.16,
                    "end": 315.36,
                    "text": " These axes are named STR,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 315.36,
                    "end": 318.88,
                    "text": " corresponding to the common XY and Z axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 319.68,
                    "end": 323.28000000000003,
                    "text": " Just like before, we'll use GL text parameter i,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 323.28000000000003,
                    "end": 324.96000000000004,
                    "text": " plugging in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 324.96000000000004,
                    "end": 326.88,
                    "text": " the setting we want to modify,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 326.88,
                    "end": 328.8,
                    "text": " and the value of our setting."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 328.8,
                    "end": 332.40000000000003,
                    "text": " Make sure to do this for both the S and T axes."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 332.47999999999996,
                    "end": 334.96,
                    "text": " If you want to use GL clamped to border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 334.96,
                    "end": 338.88,
                    "text": " you'll have to also use GL text parameter fv."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 339.52,
                    "end": 341.44,
                    "text": " Plug in the texture type,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 341.44,
                    "end": 343.35999999999996,
                    "text": " GL texture border color,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 343.35999999999996,
                    "end": 345.12,
                    "text": " and the color of the border,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 345.12,
                    "end": 348.15999999999997,
                    "text": " which would be an array of three or four floats."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 348.88,
                    "end": 350.88,
                    "text": " Note that our settings are complete."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 350.88,
                    "end": 354.64,
                    "text": " We can generate the texture using GL text image 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 354.64,
                    "end": 356.64,
                    "text": " and inputting the following."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 356.64,
                    "end": 357.67999999999995,
                    "text": " The type of texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 358.4,
                    "end": 359.28,
                    "text": " zero,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 359.28,
                    "end": 362.08,
                    "text": " the type of color channels we want the texture to have,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 362.56,
                    "end": 364.32,
                    "text": " the width, the height,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 364.32,
                    "end": 367.35999999999996,
                    "text": " zero, this is just the legacy leftover thing,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 367.35999999999996,
                    "end": 370.0,
                    "text": " the type of color channels or image has,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 370.0,
                    "end": 371.84,
                    "text": " the data type of our pixels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 371.84,
                    "end": 373.59999999999997,
                    "text": " and the image data itself."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 374.15999999999997,
                    "end": 379.59999999999997,
                    "text": " The most common types of color channels are GL RGB and GL RGBA."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 379.59999999999997,
                    "end": 381.44,
                    "text": " The first one is for JPEGs,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 381.44,
                    "end": 383.52,
                    "text": " and the second one is for P and Zs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 383.52,
                    "end": 386.08,
                    "text": " If you want to look at all the types of color channels"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 386.08,
                    "end": 387.59999999999997,
                    "text": " and pixel data types,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 387.59999999999997,
                    "end": 391.03999999999996,
                    "text": " I left a link in the description to the OpenGL documentation."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 391.76000000000005,
                    "end": 393.6,
                    "text": " If at the end of this tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 393.6,
                    "end": 396.16,
                    "text": " you get an error during compiling,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 396.16,
                    "end": 400.16,
                    "text": " then it might be because you specify the wrong type of color channels,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 400.16,
                    "end": 403.28000000000003,
                    "text": " or pixel data type for reading your image."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 403.28000000000003,
                    "end": 406.64000000000004,
                    "text": " Since we've already imported the image data into the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 406.64000000000004,
                    "end": 410.40000000000003,
                    "text": " we'll want to delete the data using STBI image free,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 410.40000000000003,
                    "end": 414.88,
                    "text": " and also unbind the texture so we don't accidentally do something to it."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 414.88,
                    "end": 419.92,
                    "text": " The last thing you'll want to do after that is to use the GL GenerateMimpup function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 419.92,
                    "end": 422.48,
                    "text": " plugging in the data type of the texture."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 422.48,
                    "end": 424.96000000000004,
                    "text": " This will generate the Mimpup for the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 424.96000000000004,
                    "end": 428.48,
                    "text": " which are just smaller resolution versions of the same texture"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 428.48,
                    "end": 432.08000000000004,
                    "text": " that are used when the texture is far away, for example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 432.08000000000004,
                    "end": 433.68,
                    "text": " Great, we have the texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 433.68,
                    "end": 438.56,
                    "text": " but we did not specify how we want the texture to be mapped on the vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 438.56,
                    "end": 442.40000000000003,
                    "text": " So listed at now by adding coordinates to our vertices."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 442.96000000000004,
                    "end": 447.84000000000003,
                    "text": " The coordinates of the texture go from 1 to 0 on both axes,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 447.84,
                    "end": 450.15999999999997,
                    "text": " starting from the bottom left corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 450.15999999999997,
                    "end": 452.64,
                    "text": " If you would give coordinates higher than 1,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 452.64,
                    "end": 456.08,
                    "text": " then the texture will be repeated such as in this example."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 456.79999999999995,
                    "end": 459.2,
                    "text": " Know that we've modified our vertices?"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 459.2,
                    "end": 462.15999999999997,
                    "text": " We also need to add a new layout over vertex shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 462.15999999999997,
                    "end": 464.79999999999995,
                    "text": " and make sure to modify our vertex buffer object."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 465.35999999999996,
                    "end": 467.91999999999996,
                    "text": " Since the fragment shader deals with colors,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 467.91999999999996,
                    "end": 471.76,
                    "text": " we need to export the texture coordinates to the fragment shader,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 471.76,
                    "end": 473.28,
                    "text": " and import them like so."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 473.91999999999996,
                    "end": 476.55999999999995,
                    "text": " The last thing we need to do in the fragment shader"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 476.56,
                    "end": 479.92,
                    "text": " is to create a uniform of type sampler 2D,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 479.92,
                    "end": 484.48,
                    "text": " call it text0, then equal the frag color to the function texture,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 484.48,
                    "end": 488.32,
                    "text": " which takes text0 and takes coordinates as inputs."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 488.32,
                    "end": 492.0,
                    "text": " The uniform tells openGil which texture unit it should use."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 492.8,
                    "end": 497.44,
                    "text": " So in the main function, create a uniform just like in the shader's tutorial,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 497.44,
                    "end": 500.48,
                    "text": " and assign the uniform the index of our slot,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 500.48,
                    "end": 501.84000000000003,
                    "text": " zero in this case."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 502.16,
                    "end": 505.36,
                    "text": " Make sure to do this after you've activated the shader program."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 506.16,
                    "end": 510.40000000000003,
                    "text": " The last thing we need to do is to bind the texture object in the main function,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 510.40000000000003,
                    "end": 511.76,
                    "text": " and we're done."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 511.76,
                    "end": 512.96,
                    "text": " If you press run,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 512.96,
                    "end": 516.32,
                    "text": " you should see a majestic texture appear on your square."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 517.04,
                    "end": 518.96,
                    "text": " But wait, it's upside down."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 519.52,
                    "end": 524.24,
                    "text": " Well, that's because OpenGL reads images from the bottom left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 524.24,
                    "end": 529.6800000000001,
                    "text": " to the top right corner, while STB reads them from the top left corner"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 529.6800000000001,
                    "end": 531.6,
                    "text": " to the bottom right corner."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 531.6800000000001,
                    "end": 538.16,
                    "text": " So all we have to do to fix this is to write STBI set flip vertically on load true"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 538.16,
                    "end": 540.4,
                    "text": " before we load in the image file."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 541.2,
                    "end": 546.16,
                    "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 557.9200000000001,
                    "end": 560.8000000000001,
                    "text": " Don't forget to add comments to everything you've written,"
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 560.8,
                    "end": 563.68,
                    "text": " so that you can make sure you understand what's happening."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 563.68,
                    "end": 568.9599999999999,
                    "text": " The source code and some exercises to test your knowledge are in the description as always."
                },
                {
                    "number": "6",
                    "title": "Textures.mp4",
                    "start": 568.9599999999999,
                    "end": 569.92,
                    "text": " Bye!"
                }
            ],
            "title": "Textures.mp4",
            "start": 541.2,
            "end": 569.92,
            "text": " To wrap it all up, I will create a custom texture class just like in tutorial number 4.  Don't forget to add comments to everything you've written,  so that you can make sure you understand what's happening.  The source code and some exercises to test your knowledge are in the description as always.  Bye!"
        }
    ],
    "text": " In the last tutorial, I showed you the basics of shaders, so now let's take a look at textures. Textures can be one-dimensional, two-dimensional, or three-dimensional, but in this tutorial, we'll only look at the two-dimensional textures as their the most common type of texture. So the first thing we'll want to do is to import an image into our program so that we can make it into a texture and display. In order to do that, we're going to use this popular open-source library called STB. To install it, go to your project folder, then libraries, and then include. Now create a folder named STB, and inside of it create the text file named STB underscore image.text. Now go to the link I left in the description, press Ctrl-A to select everything, and then copy-based it into the text file we've just created. Make sure to save it, and then rename it to STB underscore image.h. Now create a CPP file named STB.cpp in your project source files, and write the following into it so that we'll only use the things we need from this library. Now right-click the CPP file and click on compile. Make sure to only do this once. That's it. Now if you want to use the library, simply include the header file into the file you want to use it in. I'll do that in the main.cpp file. Now before we get to the texture, let's make sure we have the coordinates for a square so that we can better see our texture when displayed. Don't forget to also change your indices and the GeoLadra elements function. Run your program to make sure you do indeed get a square. If everything is all right, then let's import our image in. Keep in mind that square textures in powers of two, such as a 1024 by a 1024 pixels or 2048 by 2048 pixels, are better optimized than textures with the random number of pixels, so do try to make them fit this format. I'll be using this image of popcat. That's 512 by 512 pixels, which I'll put into a textures folder in resource files. Don't forget to also put an image in your project's main folder. First, we have to create three integer variables to sort the width and height of the image in pixels, and the number of color channels it has. Then we'll store the image itself in an un-styled character array named white, using the function STBI underscore load, and giving it the location and name of the image, the pointers of the variables we created, and zero. That's it for importing it in. Easy, right? Now let's create the texture object itself. Just like any openGill object, we'll first create a reference variable of type GLUINT and name it texture. Now just use GLGenTextures to generate the texture object, giving it the number of textures you want, one in our case, and the pointer to the reference variable. Since we've created it, we also want to delete it at the end of the main function. We now need to assign the texture to a texture unit. You can think of texture units as slots for textures that come together as a bundle. This generally holds about 16 textures, and allow the fragment shader to work with all 16 textures at the same time. To insert our texture in the slot of the texture unit, we simply need to activate the texture unit. We want using GLActivateTexture, plugging in the index of the texture unit, and then binding our texture with GLBindTexture, inserting the texture type, and its reference value. Since we now have our texture binded, that means that this would be a good time to adjust its settings to our liking. First, we'll have to choose how we want our image to be processed when scaled up or down. We can choose GL nearest, which keeps all the pixels as they are. This is preferred when working with pixel art, or we can choose GL linear, which creates new pixels according to the pixels nearby. This generally results in a blurrier image, which one you choose depends on your needs in a certain context. For now, I'll just go with GL nearest. I'll use the GL text parameter i function to tweak our texture settings, and input the type of our texture, the setting we want to modify, and the value we want to give our setting. I'll modify both the mean filter and mag filter settings. Now, the second setting is how we want our texture to be repeated. We can choose between GL repeat, GL mirrored repeat, GL clamped to edge, and GL clamped to border. The first one simply repeats the image. The second one repeats the image, but mirrors it every time it repeats it. The third one stretches the borders of the image, and the last one simply puts a flat color of your choice outside the image. Note that you can mix and match them, since they only apply on one axis. So you could have the texture repeat on the vertical axis, but only have a flat color on the horizontal axis. These axes are named STR, corresponding to the common XY and Z axes. Just like before, we'll use GL text parameter i, plugging in the texture type, the setting we want to modify, and the value of our setting. Make sure to do this for both the S and T axes. If you want to use GL clamped to border, you'll have to also use GL text parameter fv. Plug in the texture type, GL texture border color, and the color of the border, which would be an array of three or four floats. Note that our settings are complete. We can generate the texture using GL text image 2D, and inputting the following. The type of texture, zero, the type of color channels we want the texture to have, the width, the height, zero, this is just the legacy leftover thing, the type of color channels or image has, the data type of our pixels, and the image data itself. The most common types of color channels are GL RGB and GL RGBA. The first one is for JPEGs, and the second one is for P and Zs. If you want to look at all the types of color channels and pixel data types, I left a link in the description to the OpenGL documentation. If at the end of this tutorial, you get an error during compiling, then it might be because you specify the wrong type of color channels, or pixel data type for reading your image. Since we've already imported the image data into the texture, we'll want to delete the data using STBI image free, and also unbind the texture so we don't accidentally do something to it. The last thing you'll want to do after that is to use the GL GenerateMimpup function, plugging in the data type of the texture. This will generate the Mimpup for the texture, which are just smaller resolution versions of the same texture that are used when the texture is far away, for example. Great, we have the texture, but we did not specify how we want the texture to be mapped on the vertices. So listed at now by adding coordinates to our vertices. The coordinates of the texture go from 1 to 0 on both axes, starting from the bottom left corner. If you would give coordinates higher than 1, then the texture will be repeated such as in this example. Know that we've modified our vertices? We also need to add a new layout over vertex shader, and make sure to modify our vertex buffer object. Since the fragment shader deals with colors, we need to export the texture coordinates to the fragment shader, and import them like so. The last thing we need to do in the fragment shader is to create a uniform of type sampler 2D, call it text0, then equal the frag color to the function texture, which takes text0 and takes coordinates as inputs. The uniform tells openGil which texture unit it should use. So in the main function, create a uniform just like in the shader's tutorial, and assign the uniform the index of our slot, zero in this case. Make sure to do this after you've activated the shader program. The last thing we need to do is to bind the texture object in the main function, and we're done. If you press run, you should see a majestic texture appear on your square. But wait, it's upside down. Well, that's because OpenGL reads images from the bottom left corner to the top right corner, while STB reads them from the top left corner to the bottom right corner. So all we have to do to fix this is to write STBI set flip vertically on load true before we load in the image file. To wrap it all up, I will create a custom texture class just like in tutorial number 4. Don't forget to add comments to everything you've written, so that you can make sure you understand what's happening. The source code and some exercises to test your knowledge are in the description as always. Bye!"
}